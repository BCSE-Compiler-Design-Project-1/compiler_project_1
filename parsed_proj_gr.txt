add_exp' -> add_OP mul_exp add_exp' | ε 
equality_exp' -> equality_OP rel_exp equality_exp' | ε 
logical_and_exp' -> logical_AND equality_exp logical_and_exp' | ε 
logical_or_exp' -> logical_OR logical_and_exp logical_or_exp' | ε 
init_decl_list' -> , init_decl init_decl_list' | ε 
decls' -> decl decls' | ε 
read_stmts' -> read_stmt read_stmts' | ε 
stmts' -> stmt stmts' | ε 
logical_and_exp -> equality_exp logical_and_exp' 
assignment_exp1 -> = assignment_exp | ε 
init_decl1 -> ε | = exp 
tail -> { compound_stmt1 | ; | exp ; | cin inputs | cout outputs | IF ( exp ) THEN other optional_tail 
INP_OP -> >> 
type -> int | float | char 
exp' -> , assignment_exp exp' | ε 
stmt -> compound_stmt | exp_stmt | read_stmts | write_stmts | sel_stmt 
sel_stmt -> IF ( exp ) THEN other optional_tail 
compound_stmt -> { compound_stmt1 
read_stmt -> cin inputs 
inputs -> INP_OP id inputs1 
write_stmt -> cout outputs 
outputs -> OUT_OP exp outputs1 
write_stmts' -> write_stmt write_stmts' | ε 
outputs1 -> << exp outputs1 | ; 
rel_OP -> < | <= | > | >=  
mul_OP -> * | / | % 
exp_stmt -> ; | exp ; 
compound_stmt2 -> } | { compound_stmt1 stmts' } | ; stmts' } | ( exp ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } | id mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } | constant mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } | cin inputs read_stmts' stmts' } | cout outputs write_stmts' stmts' } | IF ( exp ) THEN other optional_tail stmts' } 
stmts -> compound_stmt stmts' | exp_stmt stmts' | read_stmts stmts' | write_stmts stmts' | sel_stmt stmts' 
write_stmts -> write_stmt write_stmts' 
decls -> decl decls' 
OUT_OP -> << 
init_decl_list -> init_decl init_decl_list' 
other -> compound_stmt | exp_stmt | read_stmt | write_stmt 
compound_stmt1 -> } | { compound_stmt1 stmts' } | ; stmts' } | ( exp ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } | id mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } | constant mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } | cin inputs read_stmts' stmts' } | cout outputs write_stmts' stmts' } | IF ( exp ) THEN other optional_tail stmts' } | int init_decl_list ; decls' compound_stmt2 | float init_decl_list ; decls' compound_stmt2 | char init_decl_list ; decls' compound_stmt2 
init_decl -> id init_decl1 
optional_tail -> ELSE tail | IF ( exp ) THEN other optional_tail | ε 
mul_exp -> pri_exp mul_exp' 
pri_exp -> ( exp ) | id | constant 
exp -> assignment_exp exp' 
inputs1 -> >> id inputs1 | ; 
assignment_exp -> logical_or_exp assignment_exp1 
rel_exp -> add_exp rel_exp' 
rel_exp' -> rel_OP add_exp rel_exp' | ε 
logical_or_exp -> logical_and_exp logical_or_exp' 
add_OP -> + | - 
mul_exp' -> mul_OP pri_exp mul_exp' | ε 
logical_OR -> || 
equality_OP -> == | != 
logical_AND -> && 
start -> void main ( ) compound_stmt 
read_stmts -> read_stmt read_stmts' 
equality_exp -> rel_exp equality_exp' 
decl -> type init_decl_list ; 
add_exp -> mul_exp add_exp' 


init_decl_list - { 'id' , }
other - { 'cout' , 'cin' , 'constant' , '(' , ';' , 'id' , '{' , }
compound_stmt1 - { 'char' , 'float' , 'int' , 'cout' , 'cin' , 'constant' , 'IF' , 'id' , '(' , ';' , '{' , '}' , }
tail - { 'cout' , 'cin' , 'constant' , '(' , 'IF' , 'id' , ';' , '{' , }
INP_OP - { '>>' , }
inputs - { '>>' , }
decls - { 'char' , 'float' , 'int' , }
OUT_OP - { '<<' , }
outputs - { '<<' , }
rel_OP - { '>=' , '>' , '<=' , '<' , }
mul_OP - { '/' , '%' , '*' , }
outputs1 - { ';' , '<<' , }
write_stmts' - { 'ε' , 'cout' , }
init_decl1 - { '=' , 'ε' , }
assignment_exp1 - { 'ε' , '=' , }
sel_stmt - { 'IF' , }
write_stmt - { 'cout' , }
type - { 'char' , 'float' , 'int' , }
decls' - { 'ε' , 'char' , 'float' , 'int' , }
exp' - { 'ε' , ',' , }
stmt - { 'cout' , 'cin' , 'constant' , '(' , ';' , 'IF' , 'id' , '{' , }
init_decl_list' - { 'ε' , ',' , }
logical_and_exp' - { 'ε' , '&&' , }
read_stmts' - { 'ε' , 'cin' , }
logical_or_exp' - { 'ε' , '||' , }
inputs1 - { ';' , '>>' , }
exp - { 'constant' , '(' , 'id' , }
mul_exp' - { 'ε' , '/' , '%' , '*' , }
logical_OR - { '||' , }
equality_OP - { '!=' , '==' , }
equality_exp' - { 'ε' , '!=' , '==' , }
add_exp' - { 'ε' , '-' , '+' , }
rel_exp' - { 'ε' , '>=' , '<' , '>' , '<=' , }
logical_or_exp - { 'constant' , '(' , 'id' , }
add_OP - { '-' , '+' , }
read_stmt - { 'cin' , }
stmts' - { 'cout' , '{' , 'cin' , 'constant' , 'ε' , 'id' , 'IF' , '(' , ';' , }
rel_exp - { 'constant' , '(' , 'id' , }
assignment_exp - { 'constant' , '(' , 'id' , }
compound_stmt - { '{' , }
stmts - { 'cout' , 'cin' , 'constant' , '(' , ';' , 'IF' , 'id' , '{' , }
write_stmts - { 'cout' , }
compound_stmt2 - { 'cout' , 'cin' , 'constant' , 'IF' , 'id' , '(' , ';' , '{' , '}' , }
exp_stmt - { 'constant' , '(' , 'id' , ';' , }
start - { 'void' , }
logical_AND - { '&&' , }
read_stmts - { 'cin' , }
logical_and_exp - { 'constant' , '(' , 'id' , }
optional_tail - { 'ε' , 'IF' , 'ELSE' , }
init_decl - { 'id' , }
mul_exp - { 'constant' , '(' , 'id' , }
pri_exp - { 'constant' , 'id' , '(' , }
decl - { 'char' , 'float' , 'int' , }
equality_exp - { 'constant' , '(' , 'id' , }
add_exp - { 'constant' , '(' , 'id' , }



mul_OP - { '(' , 'id' , 'constant' , }
rel_OP - { 'id' , '(' , 'constant' , }
equality_OP - { 'id' , '(' , 'constant' , }
logical_OR - { 'id' , '(' , 'constant' , }
mul_exp' - { '<<' , ')' , '+' , '-' , '=' , '!=' , 'constant' , '||' , ';' , '&&' , '==' , ',' , 'cout' , '<' , '>=' , '<=' , '>' , '$' , '(' , 'IF' , 'id' , 'cin' , '{' , '}' , }
add_exp' - { ')' , '<<' , ',' , '<' , 'cout' , '=' , '!=' , 'constant' , '||' , ';' , '&&' , '==' , '>=' , '<=' , '>' , '$' , '(' , 'IF' , 'id' , 'cin' , '{' , '}' , }
equality_exp' - { '<<' , '}' , 'cout' , '{' , 'cin' , 'id' , 'IF' , '(' , ')' , '$' , '&&' , '||' , '=' , ',' , 'constant' , ';' , }
logical_and_exp' - { '<<' , '}' , 'cout' , '{' , 'cin' , 'id' , 'IF' , '(' , ')' , '$' , '||' , '=' , ',' , 'constant' , ';' , }
logical_and_exp - { '=' , '(' , 'IF' , 'id' , 'cin' , '{' , 'cout' , '}' , ',' , '$' , ')' , '<<' , 'constant' , ';' , '||' , }
logical_or_exp' - { '<<' , '=' , '}' , ',' , ')' , '$' , ';' , 'constant' , '(' , 'IF' , 'id' , 'cin' , '{' , 'cout' , }
add_OP - { 'id' , '(' , 'constant' , }
rel_exp' - { '<<' , '}' , 'cout' , '{' , 'cin' , 'id' , 'IF' , '(' , ')' , '$' , '==' , '&&' , '||' , '!=' , '=' , ',' , 'constant' , ';' , }
logical_or_exp - { ';' , 'constant' , '<<' , ')' , '$' , ',' , '}' , 'cout' , '{' , 'cin' , 'id' , 'IF' , '(' , '=' , }
assignment_exp1 - { '<<' , ',' , ')' , '$' , ';' , 'constant' , '(' , 'IF' , 'id' , 'cin' , '{' , 'cout' , '}' , }
rel_exp - { '&&' , '=' , '(' , 'IF' , 'id' , 'cin' , '{' , 'cout' , '}' , ',' , '$' , ')' , '<<' , 'constant' , ';' , '||' , '==' , '!=' , }
assignment_exp - { '(' , 'IF' , 'id' , 'cin' , '{' , 'cout' , '}' , ',' , '$' , ')' , '<<' , 'constant' , ';' , }
stmt - { '}' , 'id' , 'IF' , 'cout' , '{' , 'cin' , 'constant' , '(' , ';' , }
exp' - { '<<' , ')' , ',' , ';' , }
inputs - { '$' , 'ELSE' , '(' , 'IF' , 'id' , ';' , 'constant' , 'cin' , '{' , 'cout' , '}' , }
stmts' - { '}' , }
write_stmt - { '$' , 'cout' , '}' , 'ELSE' , '(' , ';' , 'constant' , 'cin' , '{' , 'IF' , 'id' , }
init_decl_list' - { ';' , }
read_stmt - { '$' , 'cin' , '}' , 'ELSE' , '(' , ';' , 'constant' , '{' , 'cout' , 'IF' , 'id' , }
init_decl1 - { ',' , ';' , }
pri_exp - { '-' , '=' , '+' , '!=' , '==' , '||' , ';' , 'constant' , '<<' , ')' , '$' , '}' , '{' , 'cin' , 'id' , 'IF' , '(' , '&&' , 'cout' , '<=' , '>' , '>=' , ',' , '<' , '*' , '%' , '/' , }
mul_exp - { '>=' , '<' , ',' , '>' , '<=' , 'cout' , '&&' , '(' , 'IF' , 'id' , 'cin' , '{' , '}' , '$' , ')' , '<<' , 'constant' , ';' , '||' , '==' , '!=' , '+' , '=' , '-' , }
init_decl - { ';' , ',' , }
optional_tail - { '$' , '(' , 'IF' , 'id' , ';' , 'constant' , 'cin' , '{' , 'cout' , '}' , }
read_stmts' - { '$' , '(' , 'IF' , 'id' , ';' , 'constant' , 'cin' , '{' , 'cout' , '}' , }
stmts - { }
write_stmts - { '}' , '(' , ';' , 'constant' , 'cin' , '{' , 'cout' , 'IF' , 'id' , }
compound_stmt - { '$' , '}' , 'ELSE' , '(' , ';' , 'constant' , 'cin' , '{' , 'cout' , 'IF' , 'id' , }
sel_stmt - { '}' , '(' , ';' , 'constant' , 'cin' , '{' , 'cout' , 'IF' , 'id' , }
compound_stmt2 - { '}' , 'cout' , '{' , 'cin' , ';' , 'id' , 'IF' , '(' , 'constant' , '$' , }
exp_stmt - { '$' , '}' , 'ELSE' , '(' , ';' , 'constant' , 'cin' , '{' , 'cout' , 'IF' , 'id' , }
logical_AND - { 'id' , '(' , 'constant' , }
read_stmts - { '}' , '(' , ';' , 'constant' , 'cin' , '{' , 'cout' , 'IF' , 'id' , }
start - { '$' , }
INP_OP - { 'id' , }
write_stmts' - { '$' , '(' , 'IF' , 'id' , ';' , 'constant' , 'cin' , '{' , 'cout' , '}' , }
outputs1 - { '}' , 'cout' , '{' , 'cin' , ';' , 'id' , 'IF' , '(' , 'ELSE' , 'constant' , '$' , }
outputs - { '$' , 'ELSE' , '(' , 'IF' , 'id' , ';' , 'constant' , 'cin' , '{' , 'cout' , '}' , }
inputs1 - { '}' , 'cout' , '{' , 'cin' , ';' , 'id' , 'IF' , '(' , 'ELSE' , 'constant' , '$' , }
exp - { ',' , ')' , '<<' , ';' , }
decls - { }
OUT_OP - { 'id' , '(' , 'constant' , }
decls' - { '}' , '{' , ';' , '(' , 'id' , 'IF' , 'constant' , 'cin' , 'cout' , }
type - { 'id' , }
add_exp - { '!=' , '==' , '||' , ';' , 'constant' , '<<' , ')' , '$' , '}' , '{' , 'cin' , 'id' , 'IF' , '(' , '=' , '&&' , 'cout' , '<=' , '>' , ',' , '<' , '>=' , }
equality_exp - { '||' , ';' , 'constant' , '<<' , ')' , '$' , ',' , '}' , 'cout' , '{' , 'cin' , 'id' , 'IF' , '(' , '=' , '&&' , }
decl - { 'cout' , 'cin' , 'constant' , 'IF' , 'id' , '(' , ';' , '{' , '}' , 'char' , 'float' , 'int' , }
compound_stmt1 - { '$' , '(' , 'IF' , 'id' , ';' , 'constant' , 'cin' , '{' , 'cout' , '}' , }
other - { '$' , 'IF' , 'id' , 'ELSE' , '(' , ';' , 'constant' , 'cin' , '{' , 'cout' , '}' , }
init_decl_list - { ';' , }
tail - { '}' , 'cout' , '{' , 'cin' , ';' , 'id' , 'IF' , '(' , 'constant' , '$' , }



start                    -2     -2     -2     -2     -2      0     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -1     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2
stmt                     -2     -2     -2     -2     -2     -2      2     -2     -1      2      2     -2      3     -2     -2     -2     -2     -2     -1     -2      4     -2     -2     -2      1     -2      5     -2     -2     -2      2     -2     -2     -2     -2     -2
other                    -2     -2     -2     -2     -2     -2      7     -2     -1      7      7     -1      8     -2     -2     -2     -2     -2     -1     -2      9     -2     -2     -2      6     -2     -1     -2     -2     -2      7     -2     -2     -2     -2     -2
stmts                    -2     -2     -2     -2     -2     -2     11     -2     -2     11     11     -2     12     -2     -2     -2     -2     -2     -1     -2     13     -2     -2     -2     10     -2     14     -2     -2     -2     11     -2     -2     -2     -2     -2
compound_stmt            -2     -2     -2     -2     -2     -2     -1     -2     -1     -1     -1     -1     -1     -2     -2     -2     -2     -2     -1     -2     -1     -2     -2     -2     15     -2     -1     -2     -2     -2     -1     -2     -2     -2     -2     -2
read_stmts               -2     -2     -2     -2     -2     -2     -1     -2     -1     -1     -1     -2     16     -2     -2     -2     -2     -2     -1     -2     -1     -2     -2     -2     -1     -2     -1     -2     -2     -2     -1     -2     -2     -2     -2     -2
write_stmts              -2     -2     -2     -2     -2     -2     -1     -2     -1     -1     -1     -2     -1     -2     -2     -2     -2     -2     -1     -2     17     -2     -2     -2     -1     -2     -1     -2     -2     -2     -1     -2     -2     -2     -2     -2
read_stmt                -2     -2     -2     -2     -2     -2     -1     -2     -1     -1     -1     -1     18     -2     -2     -2     -2     -2     -1     -2     -1     -2     -2     -2     -1     -2     -1     -2     -2     -2     -1     -2     -2     -2     -2     -2
inputs                   -2     -2     -2     -2     -2     -2     -1     -2     -1     -1     -1     -1     -1     -2     -2     19     -2     -2     -1     -2     -1     -2     -2     -2     -1     -2     -1     -2     -2     -2     -1     -2     -2     -2     -2     -2
INP_OP                   -2     -2     -2     -2     -2     -2     -2     -2     -2     -1     -2     -2     -2     -2     -2     20     -2     -2     -1     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2
write_stmt               -2     -2     -2     -2     -2     -2     -1     -2     -1     -1     -1     -1     -1     -2     -2     -2     -2     -2     -1     -2     21     -2     -2     -2     -1     -2     -1     -2     -2     -2     -1     -2     -2     -2     -2     -2
outputs                  -2     -2     -2     -2     -2     -2     -1     -2     -1     -1     -1     -1     -1     -2     -2     -2     -2     22     -1     -2     -1     -2     -2     -2     -1     -2     -1     -2     -2     -2     -1     -2     -2     -2     -2     -2
OUT_OP                   -2     -2     -2     -2     -2     -2     -1     -2     -2     -1     -1     -2     -2     -2     -2     -2     -2     23     -1     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2
decls                    -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -1     -2     -2     -2     -2     24     -2     24     -2     24     -2     -2     -2     -2     -2     -2     -2     -2
decl                     -2     -2     -2     -2     -2     -2     -1     -2     -1     -1     -1     -2     -1     -2     -2     -2     -2     -2     -1     -2     -1     -2     -2     25     -1     25     -1     25     -2     -2     -1     -2     -2     -2     -2     -2
init_decl_list           -2     -2     -2     -2     -2     -2     -2     -2     -2     26     -2     -2     -2     -2     -2     -2     -2     -2     -1     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -1     -2     -2     -2     -2     -2
init_decl                -2     -2     -2     -2     -2     -2     -2     -2     -2     27     -2     -2     -2     -2     -2     -2     -2     -2     -1     -1     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -1     -2     -2     -2     -2     -2
type                     -2     -2     -2     -2     -2     -2     -2     -2     -2     -1     -2     -2     -2     -2     -2     -2     -2     -2     -1     -2     -2     -2     -2     29     -2     30     -2     28     -2     -2     -2     -2     -2     -2     -2     -2
exp_stmt                 -2     -2     -2     -2     -2     -2     32     -2     -1     32     32     -1     -1     -2     -2     -2     -2     -2     -1     -2     -1     -2     -2     -2     -1     -2     -1     -2     -2     -2     31     -2     -2     -2     -2     -2
sel_stmt                 -2     -2     -2     -2     -2     -2     -1     -2     -1     -1     -1     -2     -1     -2     -2     -2     -2     -2     -1     -2     -1     -2     -2     -2     -1     -2     33     -2     -2     -2     -1     -2     -2     -2     -2     -2
optional_tail            -2     -2     -2     -2     -2     -2     36     -2     36     36     36     34     36     -2     -2     -2     -2     -2     36     -2     36     -2     -2     -2     36     -2     36     -2     -2     -2     36     -2     -2     -2     -2     -2
tail                     -2     -2     -2     -2     -2     -2     39     -2     -1     39     39     -2     40     -2     -2     -2     -2     -2     -1     -2     41     -2     -2     -2     37     -2     42     -2     -2     -2     38     -2     -2     -2     -2     -2
exp                      -2     -2     -2     -2     -2     -2     43     -2     -2     43     43     -2     -2     -2     -2     -2     -1     -1     -1     -1     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -1     -2     -2     -2     -2     -2
assignment_exp           -2     -2     -2     -2     -2     -2     44     -2     -1     44     44     -2     -1     -2     -2     -2     -1     -1     -1     -1     -1     -2     -2     -2     -1     -2     -1     -2     -2     -2     -1     -2     -2     -2     -2     -2
logical_or_exp           -2     -2     -2     -2     -2     -2     45     -2     -1     45     45     -2     -1     -2     -1     -2     -1     -1     -1     -1     -1     -2     -2     -2     -1     -2     -1     -2     -2     -2     -1     -2     -2     -2     -2     -2
logical_OR               -2     -2     -2     -2     -2     -2     -1     46     -2     -1     -1     -2     -2     -2     -2     -2     -2     -2     -1     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2
logical_and_exp          -2     -2     -2     -2     -2     -2     47     -1     -1     47     47     -2     -1     -2     -1     -2     -1     -1     -1     -1     -1     -2     -2     -2     -1     -2     -1     -2     -2     -2     -1     -2     -2     -2     -2     -2
logical_AND              -2     -2     -2     -2     -2     -2     -1     -2     -2     -1     -1     -2     -2     -2     -2     -2     -2     -2     -1     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     48     -2     -2     -2     -2
equality_exp             -2     -2     -2     -2     -2     -2     49     -1     -1     49     49     -2     -1     -2     -1     -2     -1     -1     -1     -1     -1     -2     -2     -2     -1     -2     -1     -2     -2     -2     -1     -1     -2     -2     -2     -2
equality_OP              -2     -2     -2     -2     -2     -2     -1     -2     -2     -1     -1     -2     -2     -2     -2     -2     -2     -2     -1     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     51     -2     -2     -2     50     -2     -2
rel_exp                  -2     -2     -2     -2     -2     -2     52     -1     -1     52     52     -2     -1     -2     -1     -2     -1     -1     -1     -1     -1     -2     -2     -2     -1     -2     -1     -2     -2     -1     -1     -1     -2     -1     -2     -2
rel_OP                   -2     -2     -2     -2     56     -2     -1     -2     -2     -1     -1     -2     -2     -2     -2     -2     -2     -2     -1     -2     -2     53     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     54     55
add_exp                  -2     -2     -2     -2     -1     -2     57     -1     -1     57     57     -2     -1     -2     -1     -2     -1     -1     -1     -1     -1     -1     -2     -2     -1     -2     -1     -2     -2     -1     -1     -1     -2     -1     -1     -1
add_OP                   -2     59     -2     -2     -2     -2     -1     -2     -2     -1     -1     -2     -2     -2     -2     -2     -2     -2     -1     -2     -2     -2     58     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2
mul_exp                  -2     -1     -2     -2     -1     -2     60     -1     -1     60     60     -2     -1     -2     -1     -2     -1     -1     -1     -1     -1     -1     -1     -2     -1     -2     -1     -2     -2     -1     -1     -1     -2     -1     -1     -1
mul_OP                   63     -2     -2     61     -2     -2     -1     -2     -2     -1     -1     -2     -2     -2     -2     -2     -2     -2     -1     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     62     -2     -2     -2
pri_exp                  -1     -1     -2     -1     -1     -2     66     -1     -1     65     64     -2     -1     -2     -1     -2     -1     -1     -1     -1     -1     -1     -1     -2     -1     -2     -1     -2     -2     -1     -1     -1     -1     -1     -1     -1
outputs1                 -2     -2     -2     -2     -2     -2     -1     -2     -1     -1     -1     -1     -1     -2     -2     -2     -2     67     -1     -2     -1     -2     -2     -2     -1     -2     -1     -2     -2     -2     68     -2     -2     -2     -2     -2
inputs1                  -2     -2     -2     -2     -2     -2     -1     -2     -1     -1     -1     -1     -1     -2     -2     69     -2     -2     -1     -2     -1     -2     -2     -2     -1     -2     -1     -2     -2     -2     70     -2     -2     -2     -2     -2
compound_stmt1           -2     -2     -2     -2     -2     -2     76     -2     71     75     74     -2     77     -2     -2     -2     -2     -2     -1     -2     78     -2     -2     81     72     82     79     80     -2     -2     73     -2     -2     -2     -2     -2
compound_stmt2           -2     -2     -2     -2     -2     -2     88     -2     83     87     86     -2     89     -2     -2     -2     -2     -2     -1     -2     90     -2     -2     -2     84     -2     91     -2     -2     -2     85     -2     -2     -2     -2     -2
init_decl1               -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     93     -2     -2     -2     -1     92     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     92     -2     -2     -2     -2     -2
assignment_exp1          -2     -2     -2     -2     -2     -2     95     -2     95     95     95     -2     95     -2     94     -2     95     95     95     95     95     -2     -2     -2     95     -2     95     -2     -2     -2     95     -2     -2     -2     -2     -2
stmts'                   -2     -2     -2     -2     -2     -2     96     -2     97     96     96     -2     96     -2     -2     -2     -2     -2     -1     -2     96     -2     -2     -2     96     -2     96     -2     -2     -2     96     -2     -2     -2     -2     -2
read_stmts'              -2     -2     -2     -2     -2     -2     99     -2     99     99     99     -2     99     -2     -2     -2     -2     -2     99     -2     99     -2     -2     -2     99     -2     99     -2     -2     -2     99     -2     -2     -2     -2     -2
write_stmts'             -2     -2     -2     -2     -2     -2    101     -2    101    101    101     -2    101     -2     -2     -2     -2     -2    101     -2    101     -2     -2     -2    101     -2    101     -2     -2     -2    101     -2     -2     -2     -2     -2
decls'                   -2     -2     -2     -2     -2     -2    103     -2    103    103    103     -2    103     -2     -2     -2     -2     -2     -1     -2    103     -2     -2    102    103    102    103    102     -2     -2    103     -2     -2     -2     -2     -2
init_decl_list'          -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -1    104     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2    105     -2     -2     -2     -2     -2
exp'                     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2    107    107     -1    107     -2     -2     -2     -2     -2     -2     -2     -2     -2     -2    107     -2     -2     -2     -2     -2
logical_or_exp'          -2     -2     -2     -2     -2     -2    109    108    109    109    109     -2    109     -2    109     -2    109    109    109    109    109     -2     -2     -2    109     -2    109     -2     -2     -2    109     -2     -2     -2     -2     -2
logical_and_exp'         -2     -2     -2     -2     -2     -2    111    111    111    111    111     -2    111     -2    111     -2    111    111    111    111    111     -2     -2     -2    111     -2    111     -2     -2     -2    111    110     -2     -2     -2     -2
equality_exp'            -2     -2     -2     -2     -2     -2    113    113    113    113    113     -2    113     -2    113     -2    113    113    113    113    113     -2     -2     -2    113     -2    113     -2     -2    112    113    113     -2    112     -2     -2
rel_exp'                 -2     -2     -2     -2    114     -2    115    115    115    115    115     -2    115     -2    115     -2    115    115    115    115    115    114     -2     -2    115     -2    115     -2     -2    115    115    115     -2    115    114    114
add_exp'                 -2    116     -2     -2    117     -2    117    117    117    117    117     -2    117     -2    117     -2    117    117    117    117    117    117    116     -2    117     -2    117     -2     -2    117    117    117     -2    117    117    117
mul_exp'                118    119     -2    118    119     -2    119    119    119    119    119     -2    119     -2    119     -2    119    119    119    119    119    119    119     -2    119     -2    119     -2     -2    119    119    119    118    119    119    119


MATCHED                                            | STACK                                    | INPUT      | ACTION                        
                                                   | start $                                  | void       | push start                    
                                                   | void main ( ) compound_stmt $            | void       | output start -> void main ( ) compound_stmt 
void                                               | main ( ) compound_stmt $                 | main       | match void                    
void main                                          | ( ) compound_stmt $                      | (          | match main                    
void main (                                        | ) compound_stmt $                        | )          | match (                       
void main ( )                                      | compound_stmt $                          | {          | match )                       
void main ( )                                      | { compound_stmt1 $                       | {          | output compound_stmt -> { compound_stmt1 
void main ( ) {                                    | compound_stmt1 $                         | int        | match {                       
void main ( ) {                                    | int init_decl_list ; decls' compound_stmt2 $  | int        | output compound_stmt1 -> int init_decl_list ; decls' compound_stmt2 
void main ( ) { int                                | init_decl_list ; decls' compound_stmt2 $  | id         | match int                     
void main ( ) { int                                | init_decl init_decl_list' ; decls' compound_stmt2 $  | id         | output init_decl_list -> init_decl init_decl_list' 
void main ( ) { int                                | id init_decl1 init_decl_list' ; decls' compound_stmt2 $  | id         | output init_decl -> id init_decl1 
void main ( ) { int id                             | init_decl1 init_decl_list' ; decls' compound_stmt2 $  | =          | match id                      
void main ( ) { int id                             | = exp init_decl_list' ; decls' compound_stmt2 $  | =          | output init_decl1 -> = exp    
void main ( ) { int id =                           | exp init_decl_list' ; decls' compound_stmt2 $  | exp        | match =                       
void main ( ) { int id = exp                       | init_decl_list' ; decls' compound_stmt2 $  | ,          | match exp                     
void main ( ) { int id = exp                       | , init_decl init_decl_list' ; decls' compound_stmt2 $  | ,          | output init_decl_list' -> , init_decl init_decl_list' 
void main ( ) { int id = exp ,                     | init_decl init_decl_list' ; decls' compound_stmt2 $  | id         | match ,                       
void main ( ) { int id = exp ,                     | id init_decl1 init_decl_list' ; decls' compound_stmt2 $  | id         | output init_decl -> id init_decl1 
void main ( ) { int id = exp , id                  | init_decl1 init_decl_list' ; decls' compound_stmt2 $  | ;          | match id                      
void main ( ) { int id = exp , id                  | init_decl_list' ; decls' compound_stmt2 $  | ;          | output init_decl1 -> ε       
void main ( ) { int id = exp , id                  | ; decls' compound_stmt2 $                | ;          | output init_decl_list' -> ε  
void main ( ) { int id = exp , id ;                | decls' compound_stmt2 $                  | float      | match ;                       
void main ( ) { int id = exp , id ;                | decl decls' compound_stmt2 $             | float      | output decls' -> decl decls'  
void main ( ) { int id = exp , id ;                | type init_decl_list ; decls' compound_stmt2 $  | float      | output decl -> type init_decl_list ; 
void main ( ) { int id = exp , id ;                | float init_decl_list ; decls' compound_stmt2 $  | float      | output type -> float          
void main ( ) { int id = exp , id ; float          | init_decl_list ; decls' compound_stmt2 $  | id         | match float                   
void main ( ) { int id = exp , id ; float          | init_decl init_decl_list' ; decls' compound_stmt2 $  | id         | output init_decl_list -> init_decl init_decl_list' 
void main ( ) { int id = exp , id ; float          | id init_decl1 init_decl_list' ; decls' compound_stmt2 $  | id         | output init_decl -> id init_decl1 
void main ( ) { int id = exp , id ; float id       | init_decl1 init_decl_list' ; decls' compound_stmt2 $  | ;          | match id                      
void main ( ) { int id = exp , id ; float id       | init_decl_list' ; decls' compound_stmt2 $  | ;          | output init_decl1 -> ε       
void main ( ) { int id = exp , id ; float id       | ; decls' compound_stmt2 $                | ;          | output init_decl_list' -> ε  
void main ( ) { int id = exp , id ; float id ;     | decls' compound_stmt2 $                  | IF         | match ;                       
void main ( ) { int id = exp , id ; float id ;     | compound_stmt2 $                         | IF         | output decls' -> ε           
void main ( ) { int id = exp , id ; float id ;     | IF ( exp ) THEN other optional_tail stmts' } $  | IF         | output compound_stmt2 -> IF ( exp ) THEN other optional_tail stmts' } 
void main ( ) { int id = exp , id ; float id ; IF  | ( exp ) THEN other optional_tail stmts' } $  | (          | match IF                      
void main ( ) { int id = exp , id ; float id ; IF (  | exp ) THEN other optional_tail stmts' } $  | id         | match (                       
void main ( ) { int id = exp , id ; float id ; IF (  | assignment_exp exp' ) THEN other optional_tail stmts' } $  | id         | output exp -> assignment_exp exp' 
void main ( ) { int id = exp , id ; float id ; IF (  | logical_or_exp assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | id         | output assignment_exp -> logical_or_exp assignment_exp1 
void main ( ) { int id = exp , id ; float id ; IF (  | logical_and_exp logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | id         | output logical_or_exp -> logical_and_exp logical_or_exp' 
void main ( ) { int id = exp , id ; float id ; IF (  | equality_exp logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | id         | output logical_and_exp -> equality_exp logical_and_exp' 
void main ( ) { int id = exp , id ; float id ; IF (  | rel_exp equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | id         | output equality_exp -> rel_exp equality_exp' 
void main ( ) { int id = exp , id ; float id ; IF (  | add_exp rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | id         | output rel_exp -> add_exp rel_exp' 
void main ( ) { int id = exp , id ; float id ; IF (  | mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | id         | output add_exp -> mul_exp add_exp' 
void main ( ) { int id = exp , id ; float id ; IF (  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | id         | output mul_exp -> pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF (  | id mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | id         | output pri_exp -> id          
void main ( ) { int id = exp , id ; float id ; IF ( id  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | ||         | match id                      
void main ( ) { int id = exp , id ; float id ; IF ( id  | add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | ||         | output mul_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id  | rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | ||         | output add_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id  | equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | ||         | output rel_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id  | logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | ||         | output equality_exp' -> ε    
void main ( ) { int id = exp , id ; float id ; IF ( id  | logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | ||         | output logical_and_exp' -> ε 
void main ( ) { int id = exp , id ; float id ; IF ( id  | logical_OR logical_and_exp logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | ||         | output logical_or_exp' -> logical_OR logical_and_exp logical_or_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id  | || logical_and_exp logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | ||         | output logical_OR -> ||       
void main ( ) { int id = exp , id ; float id ; IF ( id ||  | logical_and_exp logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | constant   | match ||                      
void main ( ) { int id = exp , id ; float id ; IF ( id ||  | equality_exp logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | constant   | output logical_and_exp -> equality_exp logical_and_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id ||  | rel_exp equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | constant   | output equality_exp -> rel_exp equality_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id ||  | add_exp rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | constant   | output rel_exp -> add_exp rel_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id ||  | mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | constant   | output add_exp -> mul_exp add_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id ||  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | constant   | output mul_exp -> pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id ||  | constant mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | constant   | output pri_exp -> constant    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | &&         | match constant                
void main ( ) { int id = exp , id ; float id ; IF ( id || constant  | add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | &&         | output mul_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant  | rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | &&         | output add_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant  | equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | &&         | output rel_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant  | logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | &&         | output equality_exp' -> ε    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant  | logical_AND equality_exp logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | &&         | output logical_and_exp' -> logical_AND equality_exp logical_and_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant  | && equality_exp logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | &&         | output logical_AND -> &&      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant &&  | equality_exp logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | id         | match &&                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant &&  | rel_exp equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | id         | output equality_exp -> rel_exp equality_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant &&  | add_exp rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | id         | output rel_exp -> add_exp rel_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant &&  | mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | id         | output add_exp -> mul_exp add_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant &&  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | id         | output mul_exp -> pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant &&  | id mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | id         | output pri_exp -> id          
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | )          | match id                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id  | add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | )          | output mul_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id  | rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | )          | output add_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id  | equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | )          | output rel_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id  | logical_and_exp' logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | )          | output equality_exp' -> ε    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id  | logical_or_exp' assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | )          | output logical_and_exp' -> ε 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id  | assignment_exp1 exp' ) THEN other optional_tail stmts' } $  | )          | output logical_or_exp' -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id  | exp' ) THEN other optional_tail stmts' } $  | )          | output assignment_exp1 -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id  | ) THEN other optional_tail stmts' } $    | )          | output exp' -> ε             
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id )  | THEN other optional_tail stmts' } $      | THEN       | match )                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN  | other optional_tail stmts' } $           | {          | match THEN                    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN  | compound_stmt optional_tail stmts' } $   | {          | output other -> compound_stmt 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN  | { compound_stmt1 optional_tail stmts' } $  | {          | output compound_stmt -> { compound_stmt1 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN {  | compound_stmt1 optional_tail stmts' } $  | cin        | match {                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN {  | cin inputs read_stmts' stmts' } optional_tail stmts' } $  | cin        | output compound_stmt1 -> cin inputs read_stmts' stmts' } 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin  | inputs read_stmts' stmts' } optional_tail stmts' } $  | >>         | match cin                     
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin  | INP_OP id inputs1 read_stmts' stmts' } optional_tail stmts' } $  | >>         | output inputs -> INP_OP id inputs1 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin  | >> id inputs1 read_stmts' stmts' } optional_tail stmts' } $  | >>         | output INP_OP -> >>           
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >>  | id inputs1 read_stmts' stmts' } optional_tail stmts' } $  | id         | match >>                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id  | inputs1 read_stmts' stmts' } optional_tail stmts' } $  | >>         | match id                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id  | >> id inputs1 read_stmts' stmts' } optional_tail stmts' } $  | >>         | output inputs1 -> >> id inputs1 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >>  | id inputs1 read_stmts' stmts' } optional_tail stmts' } $  | id         | match >>                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id  | inputs1 read_stmts' stmts' } optional_tail stmts' } $  | ;          | match id                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id  | ; read_stmts' stmts' } optional_tail stmts' } $  | ;          | output inputs1 -> ;           
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ;  | read_stmts' stmts' } optional_tail stmts' } $  | IF         | match ;                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ;  | stmts' } optional_tail stmts' } $        | IF         | output read_stmts' -> ε      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ;  | stmt stmts' } optional_tail stmts' } $   | IF         | output stmts' -> stmt stmts'  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ;  | sel_stmt stmts' } optional_tail stmts' } $  | IF         | output stmt -> sel_stmt       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ;  | IF ( exp ) THEN other optional_tail stmts' } optional_tail stmts' } $  | IF         | output sel_stmt -> IF ( exp ) THEN other optional_tail 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF  | ( exp ) THEN other optional_tail stmts' } optional_tail stmts' } $  | (          | match IF                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF (  | exp ) THEN other optional_tail stmts' } optional_tail stmts' } $  | exp        | match (                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp  | ) THEN other optional_tail stmts' } optional_tail stmts' } $  | )          | match exp                     
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp )  | THEN other optional_tail stmts' } optional_tail stmts' } $  | THEN       | match )                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN  | other optional_tail stmts' } optional_tail stmts' } $  | id         | match THEN                    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN  | exp_stmt optional_tail stmts' } optional_tail stmts' } $  | id         | output other -> exp_stmt      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN  | exp ; optional_tail stmts' } optional_tail stmts' } $  | id         | output exp_stmt -> exp ;      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN  | assignment_exp exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output exp -> assignment_exp exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN  | logical_or_exp assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output assignment_exp -> logical_or_exp assignment_exp1 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN  | logical_and_exp logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output logical_or_exp -> logical_and_exp logical_or_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN  | equality_exp logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output logical_and_exp -> equality_exp logical_and_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN  | rel_exp equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output equality_exp -> rel_exp equality_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN  | add_exp rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output rel_exp -> add_exp rel_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN  | mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output add_exp -> mul_exp add_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output mul_exp -> pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN  | id mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output pri_exp -> id          
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | =          | match id                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id  | add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | =          | output mul_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id  | rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | =          | output add_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id  | equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | =          | output rel_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id  | logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | =          | output equality_exp' -> ε    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id  | logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | =          | output logical_and_exp' -> ε 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id  | assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | =          | output logical_or_exp' -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id  | = assignment_exp exp' ; optional_tail stmts' } optional_tail stmts' } $  | =          | output assignment_exp1 -> = assignment_exp 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id =  | assignment_exp exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | match =                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id =  | logical_or_exp assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output assignment_exp -> logical_or_exp assignment_exp1 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id =  | logical_and_exp logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output logical_or_exp -> logical_and_exp logical_or_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id =  | equality_exp logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output logical_and_exp -> equality_exp logical_and_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id =  | rel_exp equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output equality_exp -> rel_exp equality_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id =  | add_exp rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output rel_exp -> add_exp rel_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id =  | mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output add_exp -> mul_exp add_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id =  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output mul_exp -> pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id =  | id mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output pri_exp -> id          
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | +          | match id                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id  | add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | +          | output mul_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id  | add_OP mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | +          | output add_exp' -> add_OP mul_exp add_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id  | + mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | +          | output add_OP -> +            
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id +  | mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | match +                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id +  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output mul_exp -> pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id +  | id mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output pri_exp -> id          
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | ;          | match id                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id  | add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | ;          | output mul_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id  | rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | ;          | output add_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id  | equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | ;          | output rel_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id  | logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | ;          | output equality_exp' -> ε    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id  | logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | ;          | output logical_and_exp' -> ε 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id  | assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | ;          | output logical_or_exp' -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id  | exp' ; optional_tail stmts' } optional_tail stmts' } $  | ;          | output assignment_exp1 -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id  | ; optional_tail stmts' } optional_tail stmts' } $  | ;          | output exp' -> ε             
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ;  | optional_tail stmts' } optional_tail stmts' } $  | ELSE       | match ;                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ;  | ELSE tail stmts' } optional_tail stmts' } $  | ELSE       | output optional_tail -> ELSE tail 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE  | tail stmts' } optional_tail stmts' } $   | IF         | match ELSE                    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE  | IF ( exp ) THEN other optional_tail stmts' } optional_tail stmts' } $  | IF         | output tail -> IF ( exp ) THEN other optional_tail 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF  | ( exp ) THEN other optional_tail stmts' } optional_tail stmts' } $  | (          | match IF                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF (  | exp ) THEN other optional_tail stmts' } optional_tail stmts' } $  | exp        | match (                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp  | ) THEN other optional_tail stmts' } optional_tail stmts' } $  | )          | match exp                     
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp )  | THEN other optional_tail stmts' } optional_tail stmts' } $  | THEN       | match )                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN  | other optional_tail stmts' } optional_tail stmts' } $  | id         | match THEN                    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN  | exp_stmt optional_tail stmts' } optional_tail stmts' } $  | id         | output other -> exp_stmt      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN  | exp ; optional_tail stmts' } optional_tail stmts' } $  | id         | output exp_stmt -> exp ;      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN  | assignment_exp exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output exp -> assignment_exp exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN  | logical_or_exp assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output assignment_exp -> logical_or_exp assignment_exp1 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN  | logical_and_exp logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output logical_or_exp -> logical_and_exp logical_or_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN  | equality_exp logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output logical_and_exp -> equality_exp logical_and_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN  | rel_exp equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output equality_exp -> rel_exp equality_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN  | add_exp rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output rel_exp -> add_exp rel_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN  | mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output add_exp -> mul_exp add_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output mul_exp -> pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN  | id mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output pri_exp -> id          
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | =          | match id                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id  | add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | =          | output mul_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id  | rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | =          | output add_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id  | equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | =          | output rel_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id  | logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | =          | output equality_exp' -> ε    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id  | logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | =          | output logical_and_exp' -> ε 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id  | assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | =          | output logical_or_exp' -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id  | = assignment_exp exp' ; optional_tail stmts' } optional_tail stmts' } $  | =          | output assignment_exp1 -> = assignment_exp 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id =  | assignment_exp exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | match =                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id =  | logical_or_exp assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output assignment_exp -> logical_or_exp assignment_exp1 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id =  | logical_and_exp logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output logical_or_exp -> logical_and_exp logical_or_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id =  | equality_exp logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output logical_and_exp -> equality_exp logical_and_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id =  | rel_exp equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output equality_exp -> rel_exp equality_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id =  | add_exp rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output rel_exp -> add_exp rel_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id =  | mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output add_exp -> mul_exp add_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id =  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output mul_exp -> pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id =  | id mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output pri_exp -> id          
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | *          | match id                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id  | mul_OP pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | *          | output mul_exp' -> mul_OP pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id  | * pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | *          | output mul_OP -> *            
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id *  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | match *                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id *  | id mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output pri_exp -> id          
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | ;          | match id                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id  | add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | ;          | output mul_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id  | rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | ;          | output add_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id  | equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | ;          | output rel_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id  | logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | ;          | output equality_exp' -> ε    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id  | logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | ;          | output logical_and_exp' -> ε 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id  | assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | ;          | output logical_or_exp' -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id  | exp' ; optional_tail stmts' } optional_tail stmts' } $  | ;          | output assignment_exp1 -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id  | ; optional_tail stmts' } optional_tail stmts' } $  | ;          | output exp' -> ε             
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ;  | optional_tail stmts' } optional_tail stmts' } $  | ELSE       | match ;                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ;  | ELSE tail stmts' } optional_tail stmts' } $  | ELSE       | output optional_tail -> ELSE tail 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE  | tail stmts' } optional_tail stmts' } $   | id         | match ELSE                    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE  | exp ; stmts' } optional_tail stmts' } $  | id         | output tail -> exp ;          
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE  | assignment_exp exp' ; stmts' } optional_tail stmts' } $  | id         | output exp -> assignment_exp exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE  | logical_or_exp assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | id         | output assignment_exp -> logical_or_exp assignment_exp1 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE  | logical_and_exp logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | id         | output logical_or_exp -> logical_and_exp logical_or_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE  | equality_exp logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | id         | output logical_and_exp -> equality_exp logical_and_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE  | rel_exp equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | id         | output equality_exp -> rel_exp equality_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE  | add_exp rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | id         | output rel_exp -> add_exp rel_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE  | mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | id         | output add_exp -> mul_exp add_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | id         | output mul_exp -> pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE  | id mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | id         | output pri_exp -> id          
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | =          | match id                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id  | add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | =          | output mul_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id  | rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | =          | output add_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id  | equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | =          | output rel_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id  | logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | =          | output equality_exp' -> ε    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id  | logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | =          | output logical_and_exp' -> ε 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id  | assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | =          | output logical_or_exp' -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id  | = assignment_exp exp' ; stmts' } optional_tail stmts' } $  | =          | output assignment_exp1 -> = assignment_exp 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id =  | assignment_exp exp' ; stmts' } optional_tail stmts' } $  | constant   | match =                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id =  | logical_or_exp assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | constant   | output assignment_exp -> logical_or_exp assignment_exp1 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id =  | logical_and_exp logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | constant   | output logical_or_exp -> logical_and_exp logical_or_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id =  | equality_exp logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | constant   | output logical_and_exp -> equality_exp logical_and_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id =  | rel_exp equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | constant   | output equality_exp -> rel_exp equality_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id =  | add_exp rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | constant   | output rel_exp -> add_exp rel_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id =  | mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | constant   | output add_exp -> mul_exp add_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id =  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | constant   | output mul_exp -> pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id =  | constant mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | constant   | output pri_exp -> constant    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | ;          | match constant                
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant  | add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | ;          | output mul_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant  | rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | ;          | output add_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant  | equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | ;          | output rel_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant  | logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | ;          | output equality_exp' -> ε    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant  | logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | ;          | output logical_and_exp' -> ε 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant  | assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | ;          | output logical_or_exp' -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant  | exp' ; stmts' } optional_tail stmts' } $  | ;          | output assignment_exp1 -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant  | ; stmts' } optional_tail stmts' } $      | ;          | output exp' -> ε             
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ;  | stmts' } optional_tail stmts' } $        | }          | match ;                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ;  | } optional_tail stmts' } $               | }          | output stmts' -> ε           
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; }  | optional_tail stmts' } $                 | ELSE       | match }                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; }  | ELSE tail stmts' } $                     | ELSE       | output optional_tail -> ELSE tail 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE  | tail stmts' } $                          | IF         | match ELSE                    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE  | IF ( exp ) THEN other optional_tail stmts' } $  | IF         | output tail -> IF ( exp ) THEN other optional_tail 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF  | ( exp ) THEN other optional_tail stmts' } $  | (          | match IF                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF (  | exp ) THEN other optional_tail stmts' } $  | exp        | match (                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp  | ) THEN other optional_tail stmts' } $    | )          | match exp                     
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp )  | THEN other optional_tail stmts' } $      | THEN       | match )                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN  | other optional_tail stmts' } $           | {          | match THEN                    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN  | compound_stmt optional_tail stmts' } $   | {          | output other -> compound_stmt 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN  | { compound_stmt1 optional_tail stmts' } $  | {          | output compound_stmt -> { compound_stmt1 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN {  | compound_stmt1 optional_tail stmts' } $  | cout       | match {                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN {  | cout outputs write_stmts' stmts' } optional_tail stmts' } $  | cout       | output compound_stmt1 -> cout outputs write_stmts' stmts' } 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout  | outputs write_stmts' stmts' } optional_tail stmts' } $  | <<         | match cout                    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout  | OUT_OP exp outputs1 write_stmts' stmts' } optional_tail stmts' } $  | <<         | output outputs -> OUT_OP exp outputs1 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout  | << exp outputs1 write_stmts' stmts' } optional_tail stmts' } $  | <<         | output OUT_OP -> <<           
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout <<  | exp outputs1 write_stmts' stmts' } optional_tail stmts' } $  | constant   | match <<                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout <<  | assignment_exp exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | constant   | output exp -> assignment_exp exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout <<  | logical_or_exp assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | constant   | output assignment_exp -> logical_or_exp assignment_exp1 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout <<  | logical_and_exp logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | constant   | output logical_or_exp -> logical_and_exp logical_or_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout <<  | equality_exp logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | constant   | output logical_and_exp -> equality_exp logical_and_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout <<  | rel_exp equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | constant   | output equality_exp -> rel_exp equality_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout <<  | add_exp rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | constant   | output rel_exp -> add_exp rel_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout <<  | mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | constant   | output add_exp -> mul_exp add_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout <<  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | constant   | output mul_exp -> pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout <<  | constant mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | constant   | output pri_exp -> constant    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | <<         | match constant                
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant  | add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | <<         | output mul_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant  | rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | <<         | output add_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant  | equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | <<         | output rel_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant  | logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | <<         | output equality_exp' -> ε    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant  | logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | <<         | output logical_and_exp' -> ε 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant  | assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | <<         | output logical_or_exp' -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant  | exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | <<         | output assignment_exp1 -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant  | outputs1 write_stmts' stmts' } optional_tail stmts' } $  | <<         | output exp' -> ε             
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant  | << exp outputs1 write_stmts' stmts' } optional_tail stmts' } $  | <<         | output outputs1 -> << exp outputs1 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant <<  | exp outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | match <<                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant <<  | assignment_exp exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output exp -> assignment_exp exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant <<  | logical_or_exp assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output assignment_exp -> logical_or_exp assignment_exp1 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant <<  | logical_and_exp logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output logical_or_exp -> logical_and_exp logical_or_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant <<  | equality_exp logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output logical_and_exp -> equality_exp logical_and_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant <<  | rel_exp equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output equality_exp -> rel_exp equality_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant <<  | add_exp rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output rel_exp -> add_exp rel_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant <<  | mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output add_exp -> mul_exp add_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant <<  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output mul_exp -> pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant <<  | id mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output pri_exp -> id          
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | <<         | match id                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id  | add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | <<         | output mul_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id  | rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | <<         | output add_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id  | equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | <<         | output rel_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id  | logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | <<         | output equality_exp' -> ε    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id  | logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | <<         | output logical_and_exp' -> ε 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id  | assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | <<         | output logical_or_exp' -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id  | exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | <<         | output assignment_exp1 -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id  | outputs1 write_stmts' stmts' } optional_tail stmts' } $  | <<         | output exp' -> ε             
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id  | << exp outputs1 write_stmts' stmts' } optional_tail stmts' } $  | <<         | output outputs1 -> << exp outputs1 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id <<  | exp outputs1 write_stmts' stmts' } optional_tail stmts' } $  | (          | match <<                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id <<  | assignment_exp exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | (          | output exp -> assignment_exp exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id <<  | logical_or_exp assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | (          | output assignment_exp -> logical_or_exp assignment_exp1 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id <<  | logical_and_exp logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | (          | output logical_or_exp -> logical_and_exp logical_or_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id <<  | equality_exp logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | (          | output logical_and_exp -> equality_exp logical_and_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id <<  | rel_exp equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | (          | output equality_exp -> rel_exp equality_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id <<  | add_exp rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | (          | output rel_exp -> add_exp rel_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id <<  | mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | (          | output add_exp -> mul_exp add_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id <<  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | (          | output mul_exp -> pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id <<  | ( exp ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | (          | output pri_exp -> ( exp )     
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << (  | exp ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | match (                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << (  | assignment_exp exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output exp -> assignment_exp exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << (  | logical_or_exp assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output assignment_exp -> logical_or_exp assignment_exp1 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << (  | logical_and_exp logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output logical_or_exp -> logical_and_exp logical_or_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << (  | equality_exp logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output logical_and_exp -> equality_exp logical_and_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << (  | rel_exp equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output equality_exp -> rel_exp equality_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << (  | add_exp rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output rel_exp -> add_exp rel_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << (  | mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output add_exp -> mul_exp add_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << (  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output mul_exp -> pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << (  | id mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output pri_exp -> id          
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | +          | match id                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id  | add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | +          | output mul_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id  | add_OP mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | +          | output add_exp' -> add_OP mul_exp add_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id  | + mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | +          | output add_OP -> +            
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id +  | mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | (          | match +                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id +  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | (          | output mul_exp -> pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id +  | ( exp ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | (          | output pri_exp -> ( exp )     
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + (  | exp ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | match (                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + (  | assignment_exp exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output exp -> assignment_exp exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + (  | logical_or_exp assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output assignment_exp -> logical_or_exp assignment_exp1 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + (  | logical_and_exp logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output logical_or_exp -> logical_and_exp logical_or_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + (  | equality_exp logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output logical_and_exp -> equality_exp logical_and_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + (  | rel_exp equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output equality_exp -> rel_exp equality_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + (  | add_exp rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output rel_exp -> add_exp rel_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + (  | mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output add_exp -> mul_exp add_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + (  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output mul_exp -> pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + (  | id mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output pri_exp -> id          
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | *          | match id                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id  | mul_OP pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | *          | output mul_exp' -> mul_OP pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id  | * pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | *          | output mul_OP -> *            
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id *  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | match *                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id *  | id mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output pri_exp -> id          
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | )          | match id                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id  | add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | )          | output mul_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id  | rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | )          | output add_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id  | equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | )          | output rel_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id  | logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | )          | output equality_exp' -> ε    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id  | logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | )          | output logical_and_exp' -> ε 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id  | assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | )          | output logical_or_exp' -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id  | exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | )          | output assignment_exp1 -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id  | ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | )          | output exp' -> ε             
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id )  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | -          | match )                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id )  | add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | -          | output mul_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id )  | add_OP mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | -          | output add_exp' -> add_OP mul_exp add_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id )  | - mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | -          | output add_OP -> -            
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) -  | mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | match -                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) -  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output mul_exp -> pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) -  | id mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | id         | output pri_exp -> id          
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | )          | match id                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id  | add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | )          | output mul_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id  | rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | )          | output add_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id  | equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | )          | output rel_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id  | logical_and_exp' logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | )          | output equality_exp' -> ε    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id  | logical_or_exp' assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | )          | output logical_and_exp' -> ε 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id  | assignment_exp1 exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | )          | output logical_or_exp' -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id  | exp' ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | )          | output assignment_exp1 -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id  | ) mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | )          | output exp' -> ε             
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id )  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | /          | match )                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id )  | mul_OP pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | /          | output mul_exp' -> mul_OP pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id )  | / pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | /          | output mul_OP -> /            
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) /  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | constant   | match /                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) /  | constant mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | constant   | output pri_exp -> constant    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | ;          | match constant                
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant  | add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | ;          | output mul_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant  | rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | ;          | output add_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant  | equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | ;          | output rel_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant  | logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | ;          | output equality_exp' -> ε    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant  | logical_or_exp' assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | ;          | output logical_and_exp' -> ε 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant  | assignment_exp1 exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | ;          | output logical_or_exp' -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant  | exp' outputs1 write_stmts' stmts' } optional_tail stmts' } $  | ;          | output assignment_exp1 -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant  | outputs1 write_stmts' stmts' } optional_tail stmts' } $  | ;          | output exp' -> ε             
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant  | ; write_stmts' stmts' } optional_tail stmts' } $  | ;          | output outputs1 -> ;          
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ;  | write_stmts' stmts' } optional_tail stmts' } $  | IF         | match ;                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ;  | stmts' } optional_tail stmts' } $        | IF         | output write_stmts' -> ε     
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ;  | stmt stmts' } optional_tail stmts' } $   | IF         | output stmts' -> stmt stmts'  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ;  | sel_stmt stmts' } optional_tail stmts' } $  | IF         | output stmt -> sel_stmt       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ;  | IF ( exp ) THEN other optional_tail stmts' } optional_tail stmts' } $  | IF         | output sel_stmt -> IF ( exp ) THEN other optional_tail 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF  | ( exp ) THEN other optional_tail stmts' } optional_tail stmts' } $  | (          | match IF                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF (  | exp ) THEN other optional_tail stmts' } optional_tail stmts' } $  | exp        | match (                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp  | ) THEN other optional_tail stmts' } optional_tail stmts' } $  | )          | match exp                     
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp )  | THEN other optional_tail stmts' } optional_tail stmts' } $  | THEN       | match )                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN  | other optional_tail stmts' } optional_tail stmts' } $  | id         | match THEN                    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN  | exp_stmt optional_tail stmts' } optional_tail stmts' } $  | id         | output other -> exp_stmt      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN  | exp ; optional_tail stmts' } optional_tail stmts' } $  | id         | output exp_stmt -> exp ;      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN  | assignment_exp exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output exp -> assignment_exp exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN  | logical_or_exp assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output assignment_exp -> logical_or_exp assignment_exp1 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN  | logical_and_exp logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output logical_or_exp -> logical_and_exp logical_or_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN  | equality_exp logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output logical_and_exp -> equality_exp logical_and_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN  | rel_exp equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output equality_exp -> rel_exp equality_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN  | add_exp rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output rel_exp -> add_exp rel_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN  | mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output add_exp -> mul_exp add_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output mul_exp -> pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN  | id mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output pri_exp -> id          
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | =          | match id                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id  | add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | =          | output mul_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id  | rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | =          | output add_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id  | equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | =          | output rel_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id  | logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | =          | output equality_exp' -> ε    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id  | logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | =          | output logical_and_exp' -> ε 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id  | assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | =          | output logical_or_exp' -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id  | = assignment_exp exp' ; optional_tail stmts' } optional_tail stmts' } $  | =          | output assignment_exp1 -> = assignment_exp 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id =  | assignment_exp exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | match =                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id =  | logical_or_exp assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output assignment_exp -> logical_or_exp assignment_exp1 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id =  | logical_and_exp logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output logical_or_exp -> logical_and_exp logical_or_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id =  | equality_exp logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output logical_and_exp -> equality_exp logical_and_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id =  | rel_exp equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output equality_exp -> rel_exp equality_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id =  | add_exp rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output rel_exp -> add_exp rel_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id =  | mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output add_exp -> mul_exp add_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id =  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output mul_exp -> pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id =  | id mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | id         | output pri_exp -> id          
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | -          | match id                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id  | add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | -          | output mul_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id  | add_OP mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | -          | output add_exp' -> add_OP mul_exp add_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id  | - mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | -          | output add_OP -> -            
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id -  | mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | constant   | match -                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id -  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | constant   | output mul_exp -> pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id -  | constant mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | constant   | output pri_exp -> constant    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | ;          | match constant                
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant  | add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | ;          | output mul_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant  | rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | ;          | output add_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant  | equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | ;          | output rel_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant  | logical_and_exp' logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | ;          | output equality_exp' -> ε    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant  | logical_or_exp' assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | ;          | output logical_and_exp' -> ε 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant  | assignment_exp1 exp' ; optional_tail stmts' } optional_tail stmts' } $  | ;          | output logical_or_exp' -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant  | exp' ; optional_tail stmts' } optional_tail stmts' } $  | ;          | output assignment_exp1 -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant  | ; optional_tail stmts' } optional_tail stmts' } $  | ;          | output exp' -> ε             
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ;  | optional_tail stmts' } optional_tail stmts' } $  | IF         | match ;                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ;  | stmts' } optional_tail stmts' } $        | IF         | output optional_tail -> ε    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ;  | stmt stmts' } optional_tail stmts' } $   | IF         | output stmts' -> stmt stmts'  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ;  | sel_stmt stmts' } optional_tail stmts' } $  | IF         | output stmt -> sel_stmt       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ;  | IF ( exp ) THEN other optional_tail stmts' } optional_tail stmts' } $  | IF         | output sel_stmt -> IF ( exp ) THEN other optional_tail 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF  | ( exp ) THEN other optional_tail stmts' } optional_tail stmts' } $  | (          | match IF                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF (  | exp ) THEN other optional_tail stmts' } optional_tail stmts' } $  | exp        | match (                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp  | ) THEN other optional_tail stmts' } optional_tail stmts' } $  | )          | match exp                     
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp )  | THEN other optional_tail stmts' } optional_tail stmts' } $  | THEN       | match )                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN  | other optional_tail stmts' } optional_tail stmts' } $  | cout       | match THEN                    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN  | write_stmt optional_tail stmts' } optional_tail stmts' } $  | cout       | output other -> write_stmt    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN  | cout outputs optional_tail stmts' } optional_tail stmts' } $  | cout       | output write_stmt -> cout outputs 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout  | outputs optional_tail stmts' } optional_tail stmts' } $  | <<         | match cout                    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout  | OUT_OP exp outputs1 optional_tail stmts' } optional_tail stmts' } $  | <<         | output outputs -> OUT_OP exp outputs1 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout  | << exp outputs1 optional_tail stmts' } optional_tail stmts' } $  | <<         | output OUT_OP -> <<           
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout <<  | exp outputs1 optional_tail stmts' } optional_tail stmts' } $  | id         | match <<                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout <<  | assignment_exp exp' outputs1 optional_tail stmts' } optional_tail stmts' } $  | id         | output exp -> assignment_exp exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout <<  | logical_or_exp assignment_exp1 exp' outputs1 optional_tail stmts' } optional_tail stmts' } $  | id         | output assignment_exp -> logical_or_exp assignment_exp1 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout <<  | logical_and_exp logical_or_exp' assignment_exp1 exp' outputs1 optional_tail stmts' } optional_tail stmts' } $  | id         | output logical_or_exp -> logical_and_exp logical_or_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout <<  | equality_exp logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 optional_tail stmts' } optional_tail stmts' } $  | id         | output logical_and_exp -> equality_exp logical_and_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout <<  | rel_exp equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 optional_tail stmts' } optional_tail stmts' } $  | id         | output equality_exp -> rel_exp equality_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout <<  | add_exp rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 optional_tail stmts' } optional_tail stmts' } $  | id         | output rel_exp -> add_exp rel_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout <<  | mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 optional_tail stmts' } optional_tail stmts' } $  | id         | output add_exp -> mul_exp add_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout <<  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 optional_tail stmts' } optional_tail stmts' } $  | id         | output mul_exp -> pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout <<  | id mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 optional_tail stmts' } optional_tail stmts' } $  | id         | output pri_exp -> id          
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 optional_tail stmts' } optional_tail stmts' } $  | ;          | match id                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id  | add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 optional_tail stmts' } optional_tail stmts' } $  | ;          | output mul_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id  | rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 optional_tail stmts' } optional_tail stmts' } $  | ;          | output add_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id  | equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 optional_tail stmts' } optional_tail stmts' } $  | ;          | output rel_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id  | logical_and_exp' logical_or_exp' assignment_exp1 exp' outputs1 optional_tail stmts' } optional_tail stmts' } $  | ;          | output equality_exp' -> ε    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id  | logical_or_exp' assignment_exp1 exp' outputs1 optional_tail stmts' } optional_tail stmts' } $  | ;          | output logical_and_exp' -> ε 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id  | assignment_exp1 exp' outputs1 optional_tail stmts' } optional_tail stmts' } $  | ;          | output logical_or_exp' -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id  | exp' outputs1 optional_tail stmts' } optional_tail stmts' } $  | ;          | output assignment_exp1 -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id  | outputs1 optional_tail stmts' } optional_tail stmts' } $  | ;          | output exp' -> ε             
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id  | ; optional_tail stmts' } optional_tail stmts' } $  | ;          | output outputs1 -> ;          
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ;  | optional_tail stmts' } optional_tail stmts' } $  | ELSE       | match ;                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ;  | ELSE tail stmts' } optional_tail stmts' } $  | ELSE       | output optional_tail -> ELSE tail 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE  | tail stmts' } optional_tail stmts' } $   | id         | match ELSE                    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE  | exp ; stmts' } optional_tail stmts' } $  | id         | output tail -> exp ;          
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE  | assignment_exp exp' ; stmts' } optional_tail stmts' } $  | id         | output exp -> assignment_exp exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE  | logical_or_exp assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | id         | output assignment_exp -> logical_or_exp assignment_exp1 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE  | logical_and_exp logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | id         | output logical_or_exp -> logical_and_exp logical_or_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE  | equality_exp logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | id         | output logical_and_exp -> equality_exp logical_and_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE  | rel_exp equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | id         | output equality_exp -> rel_exp equality_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE  | add_exp rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | id         | output rel_exp -> add_exp rel_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE  | mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | id         | output add_exp -> mul_exp add_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | id         | output mul_exp -> pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE  | id mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | id         | output pri_exp -> id          
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | =          | match id                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id  | add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | =          | output mul_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id  | rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | =          | output add_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id  | equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | =          | output rel_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id  | logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | =          | output equality_exp' -> ε    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id  | logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | =          | output logical_and_exp' -> ε 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id  | assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | =          | output logical_or_exp' -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id  | = assignment_exp exp' ; stmts' } optional_tail stmts' } $  | =          | output assignment_exp1 -> = assignment_exp 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id =  | assignment_exp exp' ; stmts' } optional_tail stmts' } $  | id         | match =                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id =  | logical_or_exp assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | id         | output assignment_exp -> logical_or_exp assignment_exp1 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id =  | logical_and_exp logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | id         | output logical_or_exp -> logical_and_exp logical_or_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id =  | equality_exp logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | id         | output logical_and_exp -> equality_exp logical_and_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id =  | rel_exp equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | id         | output equality_exp -> rel_exp equality_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id =  | add_exp rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | id         | output rel_exp -> add_exp rel_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id =  | mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | id         | output add_exp -> mul_exp add_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id =  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | id         | output mul_exp -> pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id =  | id mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | id         | output pri_exp -> id          
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | %          | match id                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id  | mul_OP pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | %          | output mul_exp' -> mul_OP pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id  | % pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | %          | output mul_OP -> %            
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id %  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | constant   | match %                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id %  | constant mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | constant   | output pri_exp -> constant    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | ;          | match constant                
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant  | add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | ;          | output mul_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant  | rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | ;          | output add_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant  | equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | ;          | output rel_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant  | logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | ;          | output equality_exp' -> ε    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant  | logical_or_exp' assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | ;          | output logical_and_exp' -> ε 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant  | assignment_exp1 exp' ; stmts' } optional_tail stmts' } $  | ;          | output logical_or_exp' -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant  | exp' ; stmts' } optional_tail stmts' } $  | ;          | output assignment_exp1 -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant  | ; stmts' } optional_tail stmts' } $      | ;          | output exp' -> ε             
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ;  | stmts' } optional_tail stmts' } $        | }          | match ;                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ;  | } optional_tail stmts' } $               | }          | output stmts' -> ε           
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; }  | optional_tail stmts' } $                 | ELSE       | match }                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; }  | ELSE tail stmts' } $                     | ELSE       | output optional_tail -> ELSE tail 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE  | tail stmts' } $                          | id         | match ELSE                    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE  | exp ; stmts' } $                         | id         | output tail -> exp ;          
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE  | assignment_exp exp' ; stmts' } $         | id         | output exp -> assignment_exp exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE  | logical_or_exp assignment_exp1 exp' ; stmts' } $  | id         | output assignment_exp -> logical_or_exp assignment_exp1 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE  | logical_and_exp logical_or_exp' assignment_exp1 exp' ; stmts' } $  | id         | output logical_or_exp -> logical_and_exp logical_or_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE  | equality_exp logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } $  | id         | output logical_and_exp -> equality_exp logical_and_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE  | rel_exp equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } $  | id         | output equality_exp -> rel_exp equality_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE  | add_exp rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } $  | id         | output rel_exp -> add_exp rel_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE  | mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } $  | id         | output add_exp -> mul_exp add_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } $  | id         | output mul_exp -> pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE  | id mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } $  | id         | output pri_exp -> id          
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } $  | =          | match id                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id  | add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } $  | =          | output mul_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id  | rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } $  | =          | output add_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id  | equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } $  | =          | output rel_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id  | logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } $  | =          | output equality_exp' -> ε    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id  | logical_or_exp' assignment_exp1 exp' ; stmts' } $  | =          | output logical_and_exp' -> ε 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id  | assignment_exp1 exp' ; stmts' } $        | =          | output logical_or_exp' -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id  | = assignment_exp exp' ; stmts' } $       | =          | output assignment_exp1 -> = assignment_exp 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id =  | assignment_exp exp' ; stmts' } $         | id         | match =                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id =  | logical_or_exp assignment_exp1 exp' ; stmts' } $  | id         | output assignment_exp -> logical_or_exp assignment_exp1 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id =  | logical_and_exp logical_or_exp' assignment_exp1 exp' ; stmts' } $  | id         | output logical_or_exp -> logical_and_exp logical_or_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id =  | equality_exp logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } $  | id         | output logical_and_exp -> equality_exp logical_and_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id =  | rel_exp equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } $  | id         | output equality_exp -> rel_exp equality_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id =  | add_exp rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } $  | id         | output rel_exp -> add_exp rel_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id =  | mul_exp add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } $  | id         | output add_exp -> mul_exp add_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id =  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } $  | id         | output mul_exp -> pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id =  | id mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } $  | id         | output pri_exp -> id          
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id = id  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } $  | /          | match id                      
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id = id  | mul_OP pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } $  | /          | output mul_exp' -> mul_OP pri_exp mul_exp' 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id = id  | / pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } $  | /          | output mul_OP -> /            
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id = id /  | pri_exp mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } $  | constant   | match /                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id = id /  | constant mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } $  | constant   | output pri_exp -> constant    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id = id / constant  | mul_exp' add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } $  | ;          | match constant                
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id = id / constant  | add_exp' rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } $  | ;          | output mul_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id = id / constant  | rel_exp' equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } $  | ;          | output add_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id = id / constant  | equality_exp' logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } $  | ;          | output rel_exp' -> ε         
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id = id / constant  | logical_and_exp' logical_or_exp' assignment_exp1 exp' ; stmts' } $  | ;          | output equality_exp' -> ε    
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id = id / constant  | logical_or_exp' assignment_exp1 exp' ; stmts' } $  | ;          | output logical_and_exp' -> ε 
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id = id / constant  | assignment_exp1 exp' ; stmts' } $        | ;          | output logical_or_exp' -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id = id / constant  | exp' ; stmts' } $                        | ;          | output assignment_exp1 -> ε  
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id = id / constant  | ; stmts' } $                             | ;          | output exp' -> ε             
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id = id / constant ;  | stmts' } $                               | }          | match ;                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id = id / constant ;  | } $                                      | }          | output stmts' -> ε           
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id = id / constant ; }  | $                                        | $          | match }                       
void main ( ) { int id = exp , id ; float id ; IF ( id || constant && id ) THEN { cin >> id >> id ; IF ( exp ) THEN id = id + id ; ELSE IF ( exp ) THEN id = id * id ; ELSE id = constant ; } ELSE IF ( exp ) THEN { cout << constant << id << ( id + ( id * id ) - id ) / constant ; IF ( exp ) THEN id = id - constant ; IF ( exp ) THEN cout << id ; ELSE id = id % constant ; } ELSE id = id / constant ; }  | $                                        | $          | accept                        
